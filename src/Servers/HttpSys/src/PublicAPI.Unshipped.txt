#nullable enable
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager.AuthenticationDisplayName.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager.AuthenticationDisplayName.set -> void
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.DelegationRule.QueueName.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.DelegationRule.UrlPrefix.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Authentication.get -> Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueName.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueName.set -> void
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Timeouts.get -> Microsoft.AspNetCore.Server.HttpSys.TimeoutManager
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.UrlPrefixes.get -> Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.IHttpSysRequestDelegationFeature.DelegateRequest(Microsoft.AspNetCore.Server.HttpSys.DelegationRule destination) -> void
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.IHttpSysRequestInfoFeature.RequestInfo.get -> System.Collections.Generic.IReadOnlyDictionary<int, System.ReadOnlyMemory<byte>>
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.IServerDelegationFeature.CreateDelegationRule(string queueName, string urlPrefix) -> Microsoft.AspNetCore.Server.HttpSys.DelegationRule
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.FullPrefix.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Host.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Path.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Port.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Scheme.get -> string
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Add(Microsoft.AspNetCore.Server.HttpSys.UrlPrefix item) -> void
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Add(string prefix) -> void
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Contains(Microsoft.AspNetCore.Server.HttpSys.UrlPrefix item) -> bool
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.CopyTo(Microsoft.AspNetCore.Server.HttpSys.UrlPrefix[] array, int arrayIndex) -> void
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.AspNetCore.Server.HttpSys.UrlPrefix>
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Remove(Microsoft.AspNetCore.Server.HttpSys.UrlPrefix item) -> bool
*REMOVED*~Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Remove(string prefix) -> bool
*REMOVED*~const Microsoft.AspNetCore.Server.HttpSys.HttpSysDefaults.AuthenticationScheme = "Windows" -> string
*REMOVED*~override Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Equals(object obj) -> bool
*REMOVED*~override Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.ToString() -> string
*REMOVED*~static Microsoft.AspNetCore.Hosting.WebHostBuilderHttpSysExtensions.UseHttpSys(this Microsoft.AspNetCore.Hosting.IWebHostBuilder hostBuilder) -> Microsoft.AspNetCore.Hosting.IWebHostBuilder
*REMOVED*~static Microsoft.AspNetCore.Hosting.WebHostBuilderHttpSysExtensions.UseHttpSys(this Microsoft.AspNetCore.Hosting.IWebHostBuilder hostBuilder, System.Action<Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions> options) -> Microsoft.AspNetCore.Hosting.IWebHostBuilder
*REMOVED*~static Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Create(string prefix) -> Microsoft.AspNetCore.Server.HttpSys.UrlPrefix
*REMOVED*~static Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Create(string scheme, string host, int? portValue, string path) -> Microsoft.AspNetCore.Server.HttpSys.UrlPrefix
*REMOVED*~static Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Create(string scheme, string host, string port, string path) -> Microsoft.AspNetCore.Server.HttpSys.UrlPrefix
Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager.AuthenticationDisplayName.get -> string?
Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager.AuthenticationDisplayName.set -> void
Microsoft.AspNetCore.Server.HttpSys.DelegationRule.QueueName.get -> string!
Microsoft.AspNetCore.Server.HttpSys.DelegationRule.UrlPrefix.get -> string!
Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Authentication.get -> Microsoft.AspNetCore.Server.HttpSys.AuthenticationManager!
Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueName.get -> string?
Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.RequestQueueName.set -> void
Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.Timeouts.get -> Microsoft.AspNetCore.Server.HttpSys.TimeoutManager!
Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions.UrlPrefixes.get -> Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection!
Microsoft.AspNetCore.Server.HttpSys.IHttpSysRequestDelegationFeature.DelegateRequest(Microsoft.AspNetCore.Server.HttpSys.DelegationRule! destination) -> void
Microsoft.AspNetCore.Server.HttpSys.IHttpSysRequestInfoFeature.RequestInfo.get -> System.Collections.Generic.IReadOnlyDictionary<int, System.ReadOnlyMemory<byte>>!
Microsoft.AspNetCore.Server.HttpSys.IServerDelegationFeature.CreateDelegationRule(string! queueName, string! urlPrefix) -> Microsoft.AspNetCore.Server.HttpSys.DelegationRule!
Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.FullPrefix.get -> string!
Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Host.get -> string!
Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Path.get -> string!
Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Port.get -> string!
Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Scheme.get -> string!
Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Add(Microsoft.AspNetCore.Server.HttpSys.UrlPrefix! item) -> void
Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Add(string! prefix) -> void
Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Contains(Microsoft.AspNetCore.Server.HttpSys.UrlPrefix! item) -> bool
Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.CopyTo(Microsoft.AspNetCore.Server.HttpSys.UrlPrefix![]! array, int arrayIndex) -> void
Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.GetEnumerator() -> System.Collections.Generic.IEnumerator<Microsoft.AspNetCore.Server.HttpSys.UrlPrefix!>!
Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Remove(Microsoft.AspNetCore.Server.HttpSys.UrlPrefix! item) -> bool
Microsoft.AspNetCore.Server.HttpSys.UrlPrefixCollection.Remove(string! prefix) -> bool
const Microsoft.AspNetCore.Server.HttpSys.HttpSysDefaults.AuthenticationScheme = "Windows" -> string!
override Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Equals(object? obj) -> bool
override Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.ToString() -> string!
static Microsoft.AspNetCore.Hosting.WebHostBuilderHttpSysExtensions.UseHttpSys(this Microsoft.AspNetCore.Hosting.IWebHostBuilder! hostBuilder) -> Microsoft.AspNetCore.Hosting.IWebHostBuilder!
static Microsoft.AspNetCore.Hosting.WebHostBuilderHttpSysExtensions.UseHttpSys(this Microsoft.AspNetCore.Hosting.IWebHostBuilder! hostBuilder, System.Action<Microsoft.AspNetCore.Server.HttpSys.HttpSysOptions!>! options) -> Microsoft.AspNetCore.Hosting.IWebHostBuilder!
static Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Create(string! prefix) -> Microsoft.AspNetCore.Server.HttpSys.UrlPrefix!
static Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Create(string! scheme, string! host, int? portValue, string! path) -> Microsoft.AspNetCore.Server.HttpSys.UrlPrefix!
static Microsoft.AspNetCore.Server.HttpSys.UrlPrefix.Create(string! scheme, string! host, string! port, string! path) -> Microsoft.AspNetCore.Server.HttpSys.UrlPrefix!
