#nullable enable
*REMOVED*Microsoft.AspNetCore.SpaServices.AngularCli.AngularCliBuilder.AngularCliBuilder(string npmScript) -> void
*REMOVED*Microsoft.AspNetCore.SpaServices.AngularCli.AngularCliBuilder.Build(Microsoft.AspNetCore.SpaServices.ISpaBuilder spaBuilder) -> System.Threading.Tasks.Task
*REMOVED*Microsoft.AspNetCore.SpaServices.ISpaBuilder.ApplicationBuilder.get -> Microsoft.AspNetCore.Builder.IApplicationBuilder
*REMOVED*Microsoft.AspNetCore.SpaServices.ISpaBuilder.Options.get -> Microsoft.AspNetCore.SpaServices.SpaOptions
*REMOVED*Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerendererBuilder.Build(Microsoft.AspNetCore.SpaServices.ISpaBuilder spaBuilder) -> System.Threading.Tasks.Task
*REMOVED*Microsoft.AspNetCore.SpaServices.SpaOptions.DefaultPageStaticFileOptions.get -> Microsoft.AspNetCore.Builder.StaticFileOptions
*REMOVED*Microsoft.AspNetCore.SpaServices.SpaOptions.DefaultPageStaticFileOptions.set -> void
*REMOVED*Microsoft.AspNetCore.SpaServices.SpaOptions.PackageManagerCommand.get -> string
*REMOVED*Microsoft.AspNetCore.SpaServices.SpaOptions.PackageManagerCommand.set -> void
*REMOVED*Microsoft.AspNetCore.SpaServices.SpaOptions.SourcePath.get -> string
*REMOVED*Microsoft.AspNetCore.SpaServices.SpaOptions.SourcePath.set -> void
*REMOVED*Microsoft.AspNetCore.SpaServices.StaticFiles.ISpaStaticFileProvider.FileProvider.get -> Microsoft.Extensions.FileProviders.IFileProvider
*REMOVED*Microsoft.AspNetCore.SpaServices.StaticFiles.SpaStaticFilesOptions.RootPath.get -> string
*REMOVED*Microsoft.AspNetCore.SpaServices.StaticFiles.SpaStaticFilesOptions.RootPath.set -> void
*REMOVED*static Microsoft.AspNetCore.Builder.SpaApplicationBuilderExtensions.UseSpa(this Microsoft.AspNetCore.Builder.IApplicationBuilder app, System.Action<Microsoft.AspNetCore.SpaServices.ISpaBuilder> configuration) -> void
*REMOVED*static Microsoft.AspNetCore.Builder.SpaProxyingExtensions.UseProxyToSpaDevelopmentServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder spaBuilder, System.Func<System.Threading.Tasks.Task<System.Uri>> baseUriTaskFactory) -> void
*REMOVED*static Microsoft.AspNetCore.Builder.SpaProxyingExtensions.UseProxyToSpaDevelopmentServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder spaBuilder, System.Uri baseUri) -> void
*REMOVED*static Microsoft.AspNetCore.Builder.SpaProxyingExtensions.UseProxyToSpaDevelopmentServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder spaBuilder, string baseUri) -> void
*REMOVED*static Microsoft.AspNetCore.SpaServices.AngularCli.AngularCliMiddlewareExtensions.UseAngularCliServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder spaBuilder, string npmScript) -> void
*REMOVED*static Microsoft.AspNetCore.SpaServices.ReactDevelopmentServer.ReactDevelopmentServerMiddlewareExtensions.UseReactDevelopmentServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder spaBuilder, string npmScript) -> void
*REMOVED*static Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.AddSpaStaticFiles(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, System.Action<Microsoft.AspNetCore.SpaServices.StaticFiles.SpaStaticFilesOptions> configuration = null) -> void
*REMOVED*static Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFiles(this Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder) -> void
*REMOVED*static Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFiles(this Microsoft.AspNetCore.Builder.IApplicationBuilder applicationBuilder, Microsoft.AspNetCore.Builder.StaticFileOptions options) -> void
Microsoft.AspNetCore.SpaServices.AngularCli.AngularCliBuilder.AngularCliBuilder(string! npmScript) -> void
Microsoft.AspNetCore.SpaServices.AngularCli.AngularCliBuilder.Build(Microsoft.AspNetCore.SpaServices.ISpaBuilder! spaBuilder) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.SpaServices.ISpaBuilder.ApplicationBuilder.get -> Microsoft.AspNetCore.Builder.IApplicationBuilder!
Microsoft.AspNetCore.SpaServices.ISpaBuilder.Options.get -> Microsoft.AspNetCore.SpaServices.SpaOptions!
Microsoft.AspNetCore.SpaServices.Prerendering.ISpaPrerendererBuilder.Build(Microsoft.AspNetCore.SpaServices.ISpaBuilder! spaBuilder) -> System.Threading.Tasks.Task!
Microsoft.AspNetCore.SpaServices.SpaOptions.DefaultPageStaticFileOptions.get -> Microsoft.AspNetCore.Builder.StaticFileOptions?
Microsoft.AspNetCore.SpaServices.SpaOptions.DefaultPageStaticFileOptions.set -> void
Microsoft.AspNetCore.SpaServices.SpaOptions.PackageManagerCommand.get -> string!
Microsoft.AspNetCore.SpaServices.SpaOptions.PackageManagerCommand.set -> void
Microsoft.AspNetCore.SpaServices.SpaOptions.SourcePath.get -> string?
Microsoft.AspNetCore.SpaServices.SpaOptions.SourcePath.set -> void
Microsoft.AspNetCore.SpaServices.StaticFiles.ISpaStaticFileProvider.FileProvider.get -> Microsoft.Extensions.FileProviders.IFileProvider?
Microsoft.AspNetCore.SpaServices.StaticFiles.SpaStaticFilesOptions.RootPath.get -> string!
Microsoft.AspNetCore.SpaServices.StaticFiles.SpaStaticFilesOptions.RootPath.set -> void
static Microsoft.AspNetCore.Builder.SpaApplicationBuilderExtensions.UseSpa(this Microsoft.AspNetCore.Builder.IApplicationBuilder! app, System.Action<Microsoft.AspNetCore.SpaServices.ISpaBuilder!>! configuration) -> void
static Microsoft.AspNetCore.Builder.SpaProxyingExtensions.UseProxyToSpaDevelopmentServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder! spaBuilder, System.Func<System.Threading.Tasks.Task<System.Uri!>!>! baseUriTaskFactory) -> void
static Microsoft.AspNetCore.Builder.SpaProxyingExtensions.UseProxyToSpaDevelopmentServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder! spaBuilder, System.Uri! baseUri) -> void
static Microsoft.AspNetCore.Builder.SpaProxyingExtensions.UseProxyToSpaDevelopmentServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder! spaBuilder, string! baseUri) -> void
static Microsoft.AspNetCore.SpaServices.AngularCli.AngularCliMiddlewareExtensions.UseAngularCliServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder! spaBuilder, string! npmScript) -> void
static Microsoft.AspNetCore.SpaServices.ReactDevelopmentServer.ReactDevelopmentServerMiddlewareExtensions.UseReactDevelopmentServer(this Microsoft.AspNetCore.SpaServices.ISpaBuilder! spaBuilder, string! npmScript) -> void
static Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.AddSpaStaticFiles(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Action<Microsoft.AspNetCore.SpaServices.StaticFiles.SpaStaticFilesOptions!>? configuration = null) -> void
static Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFiles(this Microsoft.AspNetCore.Builder.IApplicationBuilder! applicationBuilder) -> void
static Microsoft.Extensions.DependencyInjection.SpaStaticFilesExtensions.UseSpaStaticFiles(this Microsoft.AspNetCore.Builder.IApplicationBuilder! applicationBuilder, Microsoft.AspNetCore.Builder.StaticFileOptions! options) -> void
