#nullable enable
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnAuthenticationFailed.get -> System.Func<Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext, System.Threading.Tasks.Task>
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnAuthenticationFailed.set -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnCertificateValidated.get -> System.Func<Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext, System.Threading.Tasks.Task>
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnCertificateValidated.set -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnChallenge.get -> System.Func<Microsoft.AspNetCore.Authentication.Certificate.CertificateChallengeContext, System.Threading.Tasks.Task>
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnChallenge.set -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext.CertificateAuthenticationFailedContext(Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Authentication.AuthenticationScheme scheme, Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions options) -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext.Exception.get -> System.Exception
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext.Exception.set -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.CustomTrustStore.get -> System.Security.Cryptography.X509Certificates.X509Certificate2Collection
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.CustomTrustStore.set -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.Events.get -> Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.Events.set -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateChallengeContext.CertificateChallengeContext(Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Authentication.AuthenticationScheme scheme, Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions options, Microsoft.AspNetCore.Authentication.AuthenticationProperties properties) -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext.CertificateValidatedContext(Microsoft.AspNetCore.Http.HttpContext context, Microsoft.AspNetCore.Authentication.AuthenticationScheme scheme, Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions options) -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext.ClientCertificate.get -> System.Security.Cryptography.X509Certificates.X509Certificate2
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext.ClientCertificate.set -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCache.CertificateValidationCache(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCacheOptions> options) -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCache.Get(Microsoft.AspNetCore.Http.HttpContext context, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) -> Microsoft.AspNetCore.Authentication.AuthenticateResult
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCache.Put(Microsoft.AspNetCore.Http.HttpContext context, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, Microsoft.AspNetCore.Authentication.AuthenticateResult result) -> void
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.ICertificateValidationCache.Get(Microsoft.AspNetCore.Http.HttpContext context, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) -> Microsoft.AspNetCore.Authentication.AuthenticateResult
*REMOVED*~Microsoft.AspNetCore.Authentication.Certificate.ICertificateValidationCache.Put(Microsoft.AspNetCore.Http.HttpContext context, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, Microsoft.AspNetCore.Authentication.AuthenticateResult result) -> void
*REMOVED*~const Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationDefaults.AuthenticationScheme = "Certificate" -> string
*REMOVED*~static Microsoft.AspNetCore.Authentication.Certificate.X509Certificate2Extensions.IsSelfSigned(this System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) -> bool
*REMOVED*~static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder builder) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder
*REMOVED*~static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder builder, System.Action<Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions> configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder
*REMOVED*~static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder builder, string authenticationScheme) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder
*REMOVED*~static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder builder, string authenticationScheme, System.Action<Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions> configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder
*REMOVED*~static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificateCache(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder builder, System.Action<Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCacheOptions> configureOptions = null) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder
*REMOVED*~virtual Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.AuthenticationFailed(Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext context) -> System.Threading.Tasks.Task
*REMOVED*~virtual Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.CertificateValidated(Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext context) -> System.Threading.Tasks.Task
*REMOVED*~virtual Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.Challenge(Microsoft.AspNetCore.Authentication.Certificate.CertificateChallengeContext context) -> System.Threading.Tasks.Task
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnAuthenticationFailed.get -> System.Func<Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnAuthenticationFailed.set -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnCertificateValidated.get -> System.Func<Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnCertificateValidated.set -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnChallenge.get -> System.Func<Microsoft.AspNetCore.Authentication.Certificate.CertificateChallengeContext!, System.Threading.Tasks.Task!>!
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.OnChallenge.set -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext.CertificateAuthenticationFailedContext(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Authentication.AuthenticationScheme! scheme, Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions! options) -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext.Exception.get -> System.Exception!
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext.Exception.set -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.AdditionalChainCertificates.get -> System.Security.Cryptography.X509Certificates.X509Certificate2Collection!
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.AdditionalChainCertificates.set -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.CustomTrustStore.get -> System.Security.Cryptography.X509Certificates.X509Certificate2Collection!
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.CustomTrustStore.set -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.Events.get -> Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents?
Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions.Events.set -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateChallengeContext.CertificateChallengeContext(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Authentication.AuthenticationScheme! scheme, Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions! options, Microsoft.AspNetCore.Authentication.AuthenticationProperties! properties) -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext.CertificateValidatedContext(Microsoft.AspNetCore.Http.HttpContext! context, Microsoft.AspNetCore.Authentication.AuthenticationScheme! scheme, Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions! options) -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext.ClientCertificate.get -> System.Security.Cryptography.X509Certificates.X509Certificate2!
Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext.ClientCertificate.set -> void
~Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCache.CertificateValidationCache(Microsoft.Extensions.Options.IOptions<Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCacheOptions!>! options) -> void
Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCache.Get(Microsoft.AspNetCore.Http.HttpContext! context, System.Security.Cryptography.X509Certificates.X509Certificate2! certificate) -> Microsoft.AspNetCore.Authentication.AuthenticateResult?
Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCache.Put(Microsoft.AspNetCore.Http.HttpContext! context, System.Security.Cryptography.X509Certificates.X509Certificate2! certificate, Microsoft.AspNetCore.Authentication.AuthenticateResult! result) -> void
Microsoft.AspNetCore.Authentication.Certificate.ICertificateValidationCache.Get(Microsoft.AspNetCore.Http.HttpContext! context, System.Security.Cryptography.X509Certificates.X509Certificate2! certificate) -> Microsoft.AspNetCore.Authentication.AuthenticateResult?
Microsoft.AspNetCore.Authentication.Certificate.ICertificateValidationCache.Put(Microsoft.AspNetCore.Http.HttpContext! context, System.Security.Cryptography.X509Certificates.X509Certificate2! certificate, Microsoft.AspNetCore.Authentication.AuthenticateResult! result) -> void
const Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationDefaults.AuthenticationScheme = "Certificate" -> string!
static Microsoft.AspNetCore.Authentication.Certificate.X509Certificate2Extensions.IsSelfSigned(this System.Security.Cryptography.X509Certificates.X509Certificate2! certificate) -> bool
static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, System.Action<Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions!>? configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, string! authenticationScheme) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificate(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, string! authenticationScheme, System.Action<Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationOptions!>? configureOptions) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
static Microsoft.Extensions.DependencyInjection.CertificateAuthenticationAppBuilderExtensions.AddCertificateCache(this Microsoft.AspNetCore.Authentication.AuthenticationBuilder! builder, System.Action<Microsoft.AspNetCore.Authentication.Certificate.CertificateValidationCacheOptions!>? configureOptions = null) -> Microsoft.AspNetCore.Authentication.AuthenticationBuilder!
virtual Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.AuthenticationFailed(Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationFailedContext! context) -> System.Threading.Tasks.Task!
virtual Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.CertificateValidated(Microsoft.AspNetCore.Authentication.Certificate.CertificateValidatedContext! context) -> System.Threading.Tasks.Task!
virtual Microsoft.AspNetCore.Authentication.Certificate.CertificateAuthenticationEvents.Challenge(Microsoft.AspNetCore.Authentication.Certificate.CertificateChallengeContext! context) -> System.Threading.Tasks.Task!
